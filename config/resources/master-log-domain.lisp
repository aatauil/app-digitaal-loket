(define-resource log-entry ()
  :class (s-prefix "rlog:Entry")
  :properties `((:class-name :url ,(s-prefix "rlog:className"))
                (:source :url ,(s(prefix "dct:source"))
                (:message :number ,(s-prefix "rlog:message"))
                (:resource :url ,(s-prefix "rlog:resource"))
                (:datetime :datetime ,(s-prefix "rlog:date")))
  :has-one `((log-level :via ,(s-prefix "rlog:level")
                   :as "data-source")
              (status-code :via ,(s-prefix "rlog:hasCode")
                   :as "data-source"))
  :resource-base (s-url "http://data.lblod.info/id/log-entries/")
  :features `(no-pagination-defaults include-uri)
  :on-path "log-entries")

(define-resource log-level ()
  :class (s-prefix "rlog:Level")
  :properties `((:code :string ,(s-prefix "rlog:codeId")))
  :resource-base (s-url "http://data.lblod.info/id/log-levels/")
  :features `(no-pagination-defaults include-uri)
  :on-path "log-levels")

(define-resource status-code ()
  :class (s-prefix "rlog:StatusCode")
  :properties `((:code :url ,(s-prefix "rlog:priority")))
  :resource-base (s-url "http://data.lblod.info/id/status-codes/")
  :features `(no-pagination-defaults include-uri)
  :on-path "status-codes")

(define-resource acm-idm-service-log-entry ()
  :class (s-prefix "ext:AcmIdmServiceLogEntry")
  :properties `((:session-uri :url ,(s-prefix "ext:sessionUri"))
                (:kbonummer :string ,(s-prefix "ext:kbonummer")))
  :resource-base (s-url "http://data.lblod.info/id/acm-idm-service-log-entries/")
  :features `(no-pagination-defaults include-uri)
  :on-path "acm-idm-service-log-entries")
